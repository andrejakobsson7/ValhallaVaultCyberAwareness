@page "/counter"
@using Microsoft.AspNetCore.Identity
@using ValhallaVaultCyberAwareness.Client.Services
@using ValhallaVaultCyberAwareness.Data
@using ValhallaVaultCyberAwareness.Domain.Models
@rendermode InteractiveAuto
@inject ICategoryService categoryService;
@inject ISegmentService segmentService;
@inject IQuestionService questionService
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnInitializedAsync()
    {
        //TEST CALL
        // List<CategoryModel> allCategories = await categoryService.GetAllCategoriesAsync();
        // List<SegmentModel> allSegments = await segmentService.GetSegmentsByCategoryIdAsync(1, "e547fd1c-ec07-49e1-b2ce-0d326f467c01");
        // var category = await categoryService.GetCategoryByIdAsync(1);
        // SegmentModel segment = await segmentService.GetSegmentByIdAsync(1);
        SegmentModel newSegment = new()
            {
                Name = "New segment",
                Description = "Test description for new segment",
                CategoryId = 1
            };
        bool isSegmentAdded = await segmentService.AddSegmentAsync(newSegment);

        // List<QuestionModel> allQuestions = await questionService.GetAllQuestionsBySubCategoryId(1);

        // QuestionModel newQuestion = new QuestionModel
        //  {
        //      Id = 0,
        //      Question = "Hej",
        //      SubCategoryId = 1,
        //  };

        //  await questionService.AddQuestionAsync(newQuestion);

            var users = await UserManager.GetUsersInRoleAsync("Admin");


        // bool isAdded = await segmentService.AddSegmentAsync(new SegmentModel()
        //     {
        //         Name = "Test segment",
        //         Description = "Test segment description",
        //         CategoryId = 1
        //     });
    }
}
