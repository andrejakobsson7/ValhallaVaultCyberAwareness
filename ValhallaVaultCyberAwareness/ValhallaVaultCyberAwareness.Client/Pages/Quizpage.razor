@page "/quizpage/{segmentId:int}"
@using ValhallaVaultCyberAwareness.Client.Services
@using ValhallaVaultCyberAwareness.Domain.Models

@inject ISubCategoryService SubCategoryService

@if (SubCategories == null)
{
    <p>Loading...</p>
}
else
{
    <div id="frontPage" class="row">
        @foreach (var SubCategoryItem in SubCategories)
        {
            <div class="col-3 mt-3">
                <div class="card border-dark text-center w-100">
                    <div class="card-body">
                        <h5 class="card-title">@SubCategoryItem.Name</h5>
                        <p>@SubCategoryItem.Description</p>
                    </div>
                    <div class="card-footer">

                        <!-- HALP!!!-->
                        <p>Previous score: 0 / @SubCategoryItem.Questions.Count</p>

                    </div>
                    <a href="@($"https://localhost:7107/quiz/{SubCategoryItem.Id}")" class="stretched-link"></a>
                </div>
            </div>
        }    
    </div>
}



@code
{
    [Parameter]
    public int SegmentId { get; set; }

    private List<SubCategoryModel>? SubCategories;

    protected override async Task OnInitializedAsync()
    {
        SubCategories = await SubCategoryService.GetSubCategoriesBySegmentIdAsync(SegmentId);
    }

    /*
    private List<SegmentModel> GetDummyData()
    {
        var dummyData = new List<SegmentModel>();

        for (int i = 1; i <= 5; i++)
        {
            var segment = new SegmentModel
                {
                    SubCategories = new List<SubCategory>
                {
                    new SubCategory { Name = $"SubCategory{i}", Description = $"Description for SubCategory{i}" },
                    new SubCategory { Name = $"SubCategory{i + 1}", Description = $"Description for SubCategory{i + 1}" }
                }
                };

            dummyData.Add(segment);
        }

        return dummyData;
    }

    public class SegmentModel
    {
        public List<SubCategory> SubCategories { get; set; } = new List<SubCategory>();

    }
    public class SubCategory
    {
        public int SubCategoryId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
    }
    */
}