@page "/hem"
@using Microsoft.AspNetCore.Authorization
@using ValhallaVaultCyberAwareness.Client.Services
@using ValhallaVaultCyberAwareness.Client.ViewModels
@using ValhallaVaultCyberAwareness.Domain.Models
@inject ICategoryService categoryService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager NavigationManager
@attribute [StreamRendering]
@attribute [Authorize]
@rendermode InteractiveServer

@if (categoriesToDisplay == null)
{
    <p>Loading...</p>
}
else
{
    <div class="container">
        <div class="row">
            <h1>Våra utbildningsområden</h1>
            <div class="col-12" style="margin-bottom:5px;">
                <input type="search" placeholder="Sök kategori" @bind-value="SearchText" @bind-value:event="oninput" />
            </div>

            @foreach (var category in categoriesToDisplay)
            {
                <div class="col-4">
                    <div class="card border-dark mb-3">
                        <div class="card-header">
                            <a href="/category/@category.CategoryId"><h5>@category.CategoryName</h5></a>
                            <p>Du har klarat @category.CompletedSegments av @category.TotalSegments segment</p>
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width:@GetCompletionPercentage(category.CompletedSegments, category.TotalSegments)%">
                                    @GetCompletionPercentage(category.CompletedSegments, category.TotalSegments)%
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <ul class="list-group" style="list-style:none">
                                @foreach (var segment in category.SegmentUserScores)
                                {
                                    <li>
                                        <a>@segment.SegmentName</a>
                                    </li>
                                    <li class="list-group-item">
                                        <ul class="list-group">
                                            @foreach (var subcategory in segment.SubCategoryScores)
                                            {
                                                <li class="list-group-item">
                                                    <a>@subcategory.SubCategoryName</a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {
    private List<CategoryScoreViewModel>? allCategories;
    private string userId;
    private string SearchText = "";
    private List<CategoryScoreViewModel>? categoriesToDisplay => allCategories?.Where(c => c.CategoryName.ToLower().Contains(SearchText.Trim().ToLower())).ToList();

    protected override async Task OnInitializedAsync()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        userId = authState.User.FindFirst(c => c.Type.Contains("nameidentifier"))?.Value;
        allCategories = await categoryService.GetAllCategoriesWithUserScores(userId);
    }

    private double GetCompletionPercentage(int completedSegments, int totalSegments)
    {
        if (totalSegments == 0)
        {
            return 0;
        }

        return (completedSegments / (double)totalSegments) * 100;
    }
}
            