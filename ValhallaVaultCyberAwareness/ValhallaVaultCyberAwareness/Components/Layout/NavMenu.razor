@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Microsoft.AspNetCore.Components.Authorization



<nav class="navbar navbar-expand navbar-dark bg-dark"> 
    <div class="container-fluid">
        <a class="navbar-brand" href="#">VVCA</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <div class="navbar-nav me-auto mb-2 mb-lg-0">
                <a class="nav-link active" aria-current="page" href="/Hem">Home</a>
                <a class="nav-link" href="/CategoryPage">Category</a>
                <a class="nav-link" href="/Account/Login">Login</a>
                <a class="nav-link" href="/Account/Register">Register</a>
                @if (UserIsAuthenticated)
                {
                    <a class="nav-link" href="/UserPage">User</a>
                }
                <AuthorizeView Roles="Admin">
                    <a class="nav-link" href="/Admin/AdminPage">Admin</a>

                </AuthorizeView>
                <div class="dropdown">
                    <a class="nav-link dropdown-toggle" href="/CategoryPage">Categories</a>
                    <div class="dropdown-content">
                        <a href="/SubCategoryPage">SubCategory</a>
                        <a href="/Segment">Segments</a>
                        <a href="/QuestionsPage">Questions</a>
                        <a href="/Client/Pages/Score">score</a>
                    </div>
                </div>
            </div>
            <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
            <a class="nav-link" href="/Support">
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="white" class="bi bi-question-circle" viewBox="0 0 16 16">
                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                    <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286m1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94" />
                </svg>
            </a>

        </div>
    </div>
</nav>

<style>
    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
        z-index: 1;
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown:hover .dropdown-content {
        display: block;
    }

    .dropdown-content a:hover {
        background-color: #ddd;
    }

    .dropdown:hover .dropdown-toggle {
        background-color: #3e8e41;
    }

</style>

@code {
    private bool UserIsAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        UserIsAuthenticated = authState.User.Identity.IsAuthenticated;
    }
}