@page "/Admin/Segment/UpdateSegmentPage/{id:int}"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject AdminManager manager;
@inject NavigationManager navManager

<h3>UpdateSegmentPage</h3>

@if(CurrentSegment != null)
{
    <EditForm Model="CurrentSegment" OnSubmit="HandleSubmit" FormName="name" class="card w-50">

        <label>
            Name
        </label>

        <InputText @bind-Value="CurrentSegment.Name"></InputText>

        <label>
            Description
        </label>

        <InputText @bind-Value="CurrentSegment.Description"></InputText>

        <label>
            Category:
        </label>

        <InputSelect @bind-Value="CurrentSegment.CategoryId">
            @foreach (var category in Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>


        <input type="submit" value="Update segment" />

    </EditForm>
}
else
{
    <h3>Loading...</h3>
}

 
@code {

    [Parameter]
    public int id { get; set; }

    public SegmentModel CurrentSegment { get; set; } = new();

    List<CategoryModel> Categories = new();

    protected override async Task OnInitializedAsync()
    {
        CurrentSegment = await manager._segmentRepository.GetSegmentByIdAsync(id);
        Categories =  await manager._categoryRepository.GetAllCategoriesAsync();
    }

    private async Task HandleSubmit()
    {
        await manager._segmentRepository.UpdateSegmentAsync(CurrentSegment);
        navManager.NavigateTo("/Admin/Segment/SegmentPage");
    }

}
