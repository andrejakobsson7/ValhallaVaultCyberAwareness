@page "/Admin/Segment/SegmentPage"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject AdminManager manager

<h3>Segments: </h3>

@if(Segments.Any())
{
    <div class="flex-column">

        @foreach (var segment in Segments)
        {
            <Segment CurrentSegment="@segment" OnDelete=" async () => await OnChange()"></Segment>
        }
        <AddSegmentForm Categories="Categories" OnAdd="async () => await OnChange()"></AddSegmentForm>
     </div>
}
else
{
    <h3>Loading...</h3>

}

@code {
    List<SegmentModel> Segments = new();

    List<CategoryModel> Categories = new();

    protected override async Task OnInitializedAsync()
    {
        Segments = await manager._segmentRepository.GetAllSegmentsWithIncludeAsync();

        // Categories = await manager._categoryRepository.GetAllCategoriesAsync();

    }

    private async Task OnChange()
    {
        Segments = await manager._segmentRepository.GetAllSegmentsWithIncludeAsync();
        StateHasChanged();
    }
}
