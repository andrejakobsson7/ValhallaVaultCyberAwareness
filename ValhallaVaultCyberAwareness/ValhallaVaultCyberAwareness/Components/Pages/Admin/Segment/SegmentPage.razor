@page "/Admin/Segment/SegmentPage"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject AdminManager manager

<h3>Segments: </h3>

@if(Segments.Any())
{
     <div class="container">

        <div class="row">

           <div class="col-sm">

                <h3>Segments: </h3>

                @foreach (var segment in Segments)
                {
                    <Segment CurrentSegment="@segment" OnDelete=" async () => await OnChange()"></Segment>
                }

           </div>

           <div class="col-sm">
                <AddSegmentForm Categories="Categories" OnAdd="async () => await OnChange()"></AddSegmentForm>
            </div>

        </div>

    </div>
    
}
else
{
    <h3>Loading...</h3>

}


@code {
    List<SegmentModel> Segments = new();

    List<CategoryModel> Categories = new();

    protected override async Task OnInitializedAsync()
    {
        Segments = await manager._segmentRepository.GetAllSegmentsWithIncludeAsync();

        // Categories = await manager._categoryRepository.GetAllCategoriesAsync();

    }

    private async Task OnChange()
    {
        Segments = await manager._segmentRepository.GetAllSegmentsWithIncludeAsync();
        StateHasChanged();
    }
}

<style>

    h3 {
        font-weight: bold;
    }

    .container {
        font-family: 'Trebuchet MS';
    }

</style>