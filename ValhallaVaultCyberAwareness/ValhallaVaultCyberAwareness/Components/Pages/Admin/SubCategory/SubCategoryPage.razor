@page "/Admin/SubCategory/SubCategoryPage"
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer
@inject AdminManager manager
@inject ApplicationDbContext context

<h3>Subcategories: </h3>

@if(Subcategories.Any())
{
    <div class="flex-column">

        @foreach (var subCategory in Subcategories)
        {
            <SubCategory CurrentSubCategory="subCategory" OnDelete=" async () => await OnChange()"></SubCategory>
        }

        <AddSubCategoryForm OnAdd="async () => await OnChange()"></AddSubCategoryForm>
     </div>
}
else
{
    <h3>Loading...</h3>
}

@code {
    List<SubCategoryModel> Subcategories = new();

    List<SegmentModel> Segments = new();

    protected override async Task OnInitializedAsync()
    {
        Subcategories = await manager._subcategoryRepository.GetSubCategoriesWithIncludeAsync();
    }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     Subcategories = await manager._subcategoryRepository.GetSubCategoriesWithIncludeAsync();
    // }


    // Gets the new list of subcategories and calls statehaschanged to refresh the page
    private async Task OnChange()
    {
        context.ChangeTracker.Clear();
        Subcategories = await manager._subcategoryRepository.GetSubCategoriesWithIncludeAsync();
        StateHasChanged();
    }
}
