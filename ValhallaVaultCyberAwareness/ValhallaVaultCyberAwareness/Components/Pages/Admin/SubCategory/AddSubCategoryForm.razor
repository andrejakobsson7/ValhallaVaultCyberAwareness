@inject AdminManager manager
@inject NavigationManager navManager

<ConfirmDialog @ref="dialog"></ConfirmDialog>

<h3>Create a SubCategory: </h3>

<EditForm Model="SubCategory" OnSubmit=" async ()=> await HandleSubmit()" FormName="name" class="card w-50">

    <label>
        Name
    </label>

    <InputText @bind-Value="SubCategory.Name"></InputText>

    <label>
        Description
    </label>

    <InputText @bind-Value="SubCategory.Description"></InputText>

    <label>
        Segment:
    </label>

    <InputSelect @bind-Value="SubCategory.SegmentId">
        <option>None</option>
        @foreach (var segment in Segments)
        {
            <option value="@segment.Id">@segment.Name</option>
        }
    </InputSelect>

    <input type="submit" value="Create subcategory" />

</EditForm>


@code {
    [SupplyParameterFromForm]
    public SubCategoryModel SubCategory { get; set; } = new();

    public List<SegmentModel> Segments { get; set; } = new();

    private ConfirmDialog dialog;

    [Parameter]
    public Action? OnAdd { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Segments = await manager._segmentRepository.GetAllSegmentsAsync();

    }

    private async Task HandleSubmit()
    {

        var confirmation = await dialog.ShowAsync(

            title: "Are you sure you want to add?",
            message1: "Y/N"
        );

        if (confirmation)
        {
            await manager._subcategoryRepository.AddSubCategory(SubCategory);

            navManager.NavigateTo("Admin/SubCategory/SubCategoryPage", true);
            // OnAdd?.Invoke();
            // StateHasChanged();
        }
    }

    // protected override async Task OnParametersSetAsync()
    // {
    //     SubCategory = null;
    // }

}
