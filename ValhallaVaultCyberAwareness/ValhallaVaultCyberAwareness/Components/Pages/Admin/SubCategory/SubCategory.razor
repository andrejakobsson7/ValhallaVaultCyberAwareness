@rendermode InteractiveServer
@inject AdminManager manager

<ConfirmDialog @ref="dialog"></ConfirmDialog>

<div class="card">
    <div class="card-body">

        <h5 class="card-title">@CurrentSubCategory.Name</h5>
         <h5 class="card-text">Segment: @CurrentSubCategory.Segment.Name</h5>
         <p class="card-text">@CurrentSubCategory.Description</p>
        <button class="btn btn-primary" @onclick="async () => await DeleteSubCategory()">Delete</button>
       @*  <a href="/Admin/Segment/UpdateSegmentPage/@CurrentSubCategory.Id">
            <button class="btn btn-primary">Edit</button>
        </a>
 *@
        <button class="btn btn-primary" @onclick="Toggle">Edit</button>

        @if(Hide == false)
        {
            <EditSubCategoryForm SubCategory="CurrentSubCategory" OnUpdate="ToggleHide"></EditSubCategoryForm>
        }

    </div>
</div>
@code {
    [Parameter]
    public SubCategoryModel CurrentSubCategory { get; set; }

    [Parameter]
    public Action? OnDelete { get; set; }

    private ConfirmDialog dialog;

    async Task DeleteSubCategory()
    {
        var confirmation = await dialog.ShowAsync(

            title: "Are you sure you want to delete this subcategory?",
            message1: "This item will be deleted permanently. You can't undo this action."

        );

        if (confirmation)
        {
            await manager._subcategoryRepository.DeleteSubCategoryAsync(CurrentSubCategory.Id);
            OnDelete.Invoke();
        }

    }

    private bool Hide { get; set; } = true;

    private void Toggle()
    {
        Hide = !Hide;
    }

    private void ToggleHide()
    {
        Hide = true;
        StateHasChanged();
    }
  
}
