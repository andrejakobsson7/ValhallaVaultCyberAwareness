@page "/Admin/Question/QuestionPage"
@attribute [Authorize(Roles = "Admin")]
@inject AdminManager manager
@rendermode InteractiveServer

@if(Questions == null)
{
    <h3>Loading...</h3>
}
else
{
    <div class="container">

        <div class="row">

            <div class="col-sm question">
                <h3>Questions: </h3>
                @{
                    int questionId = 0;

                    @foreach (var question in Questions)
                    {
                        questionId++;
                        <Question CurrentQuestion="@question" QuestionId="@questionId" OnDelete=" async () => await OnChange()"></Question>
                    }
                }
                

           </div>

           <div class="col-sm">

                <AddQuestionForm></AddQuestionForm>

           </div>

        </div>

    </div>

}


@code {
    List<QuestionModel> Questions = new();

    protected override async Task OnInitializedAsync()
    {
        Questions = await manager._questionRepository.GetAllQuestionsWithIncludeAsync();
    }

    private async Task OnChange()
    {
        Questions = await manager._questionRepository.GetAllQuestionsWithIncludeAsync();
        StateHasChanged();
    }
}

<style>

    h3 {
        font-weight: bold;
    }

    .container {
        font-family: 'Trebuchet MS';
    }

</style>