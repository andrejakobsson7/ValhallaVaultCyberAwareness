@page "/Admin/Question/Answers/EditAnswersPage/{id:int}"
@attribute [Authorize(Roles = "Admin")]
@inject AdminManager manager
@rendermode InteractiveServer

<h3>Edit Answers: </h3>

@if(Answers != null)
{
    <div class="container">

       @foreach(var answer in Answers)
        {
        <EditAnswerForm Answer="answer" QuestionAnswers="Answers" OnUpdate=" async () => await OnChange()" OnError="OnError"></EditAnswerForm>
        }

        @if(Hide == false)
        {
            <br />

            <Alert Color="AlertColor.Danger">
                <strong>Please add a correct answer</strong>  <Button Color="ButtonColor.Danger" @onclick="ToggleHide">Close</Button>
            </Alert>

        }

    </div>
   
}

@code {

    [Parameter]
    public int id { get; set; }

    public List<AnswerModel> Answers { get; set; } = new();

    private bool Hide { get; set; } = true;


    protected override async Task OnInitializedAsync()
    {
        Answers = await manager._answersRepository.GetAnswersByQuestionIdAsync(id);

    }

    private async Task OnChange()
    {
        Answers = await manager._answersRepository.GetAnswersByQuestionIdAsync(id);
        StateHasChanged();
    }

    private void OnError()
    {
        Hide = false;
        StateHasChanged();

    }

    private void ToggleHide()
    {
        Hide = true;
    }

}

<style>

    h3 {
        font-weight: bold;
    }

    .container {
        font-family: 'Trebuchet MS';
    }

</style>
